diff --git a/README.md b/README.md
index 5ff22a6..9594baf 100644
--- a/README.md
+++ b/README.md
@@ -74,6 +74,8 @@ Give it a try by running `npx standard --fix` right now!
   - [Is there a Node.js API?](#is-there-a-nodejs-api)
   - [How do I contribute to StandardJS?](#how-do-i-contribute-to-standardjs)
 
+<span id="install"></span>
+
 ## Install
 
 The easiest way to use JavaScript Standard Style is to install it globally as a
@@ -91,6 +93,8 @@ $ npm install standard --save-dev
 
 *Note: To run the preceding commands, [Node.js](http://nodejs.org) and [npm](https://npmjs.com) must be installed.*
 
+<span id="usage"></span>
+
 ## Usage
 
 After you've installed `standard`, you should be able to use the `standard` program. The
@@ -120,6 +124,8 @@ $ standard "src/util/**/*.js" "test/**/*.js"
 **Note:** by default `standard` will look for all files matching the patterns:
 `**/*.js`, `**/*.jsx`.
 
+<span id="#what-you-might-do-if-youre-clever"></span>
+
 ## What you might do if you're clever
 
 1. Add it to `package.json`
@@ -146,6 +152,8 @@ $ standard "src/util/**/*.js" "test/**/*.js"
 
 3. Never give style feedback on a pull request again!
 
+<span id="why-should-i-use-javascript-standard-style"></span>
+
 ## Why should I use JavaScript Standard Style?
 
 The beauty of JavaScript Standard Style is that it's simple. No one wants to
@@ -172,6 +180,8 @@ ESLint"](https://www.youtube.com/watch?v=kuHfMw8j4xk). In this talk, you'll lear
 about linting, when to use `standard` versus `eslint`, and how `prettier` compares
 to `standard`.
 
+<span id="#who-uses-javascript-standard-style"></span>
+
 ## Who uses JavaScript Standard Style?
 
 [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nodejs.png>](https://nodejs.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/npm.png>](https://www.npmjs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/github.png>](https://github.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/wormhole.png>](https://wormhole.app) |
@@ -224,6 +234,8 @@ to list here.
 `standard` is also the top-starred linter in GitHub's
 [Clean Code Linter](https://github.com/showcases/clean-code-linters) showcase.
 
+<span id="are-there-text-editor-plugins"></span>
+
 ## Are there text editor plugins?
 
 First, install `standard`. Then, install the appropriate plugin for your editor:
@@ -315,6 +327,8 @@ If you still prefer to configure `standard` manually, [follow this guide][websto
 
 [webstorm-1]: docs/webstorm.md
 
+<span id="is-there-a-readme-badge"></span>
+
 ## Is there a readme badge?
 
 Yes! If you use `standard` in your project, you can include one of these badges in
@@ -332,6 +346,8 @@ your readme to let people know that your code is using the standard style.
 [![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)
 ```
 
+<span id="i-disagree-with-rule-x-can-you-change-it"></span>
+
 ## I disagree with rule X, can you change it?
 
 No. The whole point of `standard` is to save you time by avoiding
@@ -358,6 +374,8 @@ could spend your time solving! :P
 
 [bikeshedding]: https://docs.freebsd.org/en/books/faq/#bikeshed-painting
 
+<span id="but-this-isnt-a-real-web-standard"></span>
+
 ## But this isn't a real web standard!
 
 Of course it's not! The style laid out here is not affiliated with any official web
@@ -369,6 +387,8 @@ The word "standard" has more meanings than just "web standard" :-) For example:
 - This module helps hold our code to a high *standard of quality*.
 - This module ensures that new contributors follow some basic *style standards*.
 
+<span id="is-there-an-automatic-formatter"></span>
+
 ## Is there an automatic formatter?
 
 Yes! You can use `standard --fix` to fix most issues automatically.
@@ -381,6 +401,8 @@ To save you time, `standard` outputs the message "`Run standard --fix to
 automatically fix some problems`" when it detects problems that can be fixed
 automatically.
 
+<span id="how-do-i-ignore-files"></span>
+
 ## How do I ignore files?
 
 Certain paths (`node_modules/`, `coverage/`, `vendor/`, `*.min.js`,
@@ -402,6 +424,8 @@ that, add a `standard.ignore` property to `package.json`:
 }
 ```
 
+<span id="how-do-i-disable-a-rule"></span>
+
 ## How do I disable a rule?
 
 In rare cases, you'll need to break a rule and hide the error generated by
@@ -432,6 +456,8 @@ console.log('offending code goes here...')
 /* eslint-enable no-use-before-define */
 ```
 
+<span id="i-use-a-library-that-pollutes-the-global-namespace-how-do-i-prevent-variable-is-not-defined-errors"></span>
+
 ## I use a library that pollutes the global namespace. How do I prevent "variable is not defined" errors?
 
 Some packages (e.g. `mocha`) put their functions (e.g. `describe`, `it`) on the
@@ -466,6 +492,8 @@ Or, add this to `package.json`:
 
 *Note: `global` and `globals` are equivalent.*
 
+<span id="how-do-i-use-experimental-javascript-es-next-features"></span>
+
 ## How do I use experimental JavaScript (ES Next) features?
 
 `standard` supports the latest ECMAScript features, ES8 (ES2017), including
@@ -497,6 +525,8 @@ Or, add this to `package.json`:
 }
 ```
 
+<span id="can-i-use-a-javascript-language-variant-like-flow-or-typescript"></span>
+
 ## Can I use a JavaScript language variant, like Flow or TypeScript?
 
 `standard` supports the latest ECMAScript features. However, Flow and TypeScript add new
@@ -570,6 +600,8 @@ Or, add this to `package.json`:
 
 *Note: `plugin` and `plugins` are equivalent.*
 
+<span id="what-about-mocha-jest-jasmine-qunit-etc"></span>
+
 ## What about Mocha, Jest, Jasmine, QUnit, etc?
 
 To support mocha in test files, add this to the top of the test files:
@@ -594,6 +626,8 @@ module.
 
 *Note: `env` and `envs` are equivalent.*
 
+<span id="what-about-web-workers-and-service-workers"></span>
+
 ## What about Web Workers and Service Workers?
 
 Add this to the top of web worker files:
@@ -611,6 +645,8 @@ For Service workers, add this instead:
 /* eslint-env serviceworker */
 ```
 
+<span id="what-is-the-difference-between-warnings-and-errors"></span>
+
 ## What is the difference between warnings and errors?
 
 `standard` treats all rule violations as errors, which means that `standard`
@@ -634,6 +670,8 @@ features. We want using `standard` to be light and fun and so we're careful
 about making changes that may get in your way. As always, you can
 [disable a rule](#how-do-i-disable-a-rule) at any time, if necessary.
 
+<span id="can-i-check-code-inside-of-markdown-or-html-files"></span>
+
 ## Can I check code inside of Markdown or HTML files?
 
 To check code inside Markdown files, use [`standard-markdown`](https://www.npmjs.com/package/standard-markdown).
@@ -665,6 +703,8 @@ Then, to check JS that appears inside `<script>` tags, run:
 $ standard --plugin html '**/*.html'
 ```
 
+<span id="is-there-a-git-pre-commit-hook"></span>
+
 ## Is there a Git `pre-commit` hook?
 
 Yes! Hooks are great for ensuring that unstyled code never even makes it into your repo.
@@ -718,6 +758,8 @@ Alternatively, for more advanced styling configurations, use `standard` within t
           # and whatever other plugins...
 ```
 
+<span id="how-do-i-make-the-output-all-colorful-and-pretty"></span>
+
 ## How do I make the output all colorful and pretty?
 
 The built-in output is simple and straightforward, but if you like shiny things,
@@ -738,6 +780,8 @@ There's also [standard-tap](https://www.npmjs.com/package/standard-tap),
 [standard-reporter](https://www.npmjs.com/package/standard-reporter), and
 [standard-summary](https://www.npmjs.com/package/standard-summary).
 
+<span id="is-there-a-nodejs-api"></span>
+
 ## Is there a Node.js API?
 
 Yes!
@@ -818,6 +862,8 @@ Both `ignore` and `files` patterns are resolved relative to the current working
 
 Returns a `Promise` resolving to the `results` or rejected with an `Error` (same as above).
 
+<span id="how-do-i-contribute-to-standardjs"></span>
+
 ## How do I contribute to StandardJS?
 
 Contributions are welcome! Check out the [issues](https://github.com/standard/standard/issues) or the [PRs](https://github.com/standard/standard/pulls), and make your own if you want something that you don't see there.
@@ -841,10 +887,14 @@ There are also many **[editor plugins](#are-there-text-editor-plugins)**, a list
 and an awesome list of
 **[packages in the `standard` ecosystem](https://github.com/standard/awesome-standard)**.
 
+<span id="security-policies-and-procedures"></span>
+
 ## Security Policies and Procedures
 
 The `standard` team and community take all security bugs in `standard` seriously. Please see our [security policies and procedures](https://github.com/standard/.github/blob/master/SECURITY.md) document to learn how to report issues.
 
+<span id="license"></span>
+
 ## License
 
 [MIT](LICENSE). Copyright (c) [Feross Aboukhadijeh](https://feross.org).
